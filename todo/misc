more aggregators
   linreg
   weighted percentile [map] (may be difficult to decide integration with the domain language...)
recs-frommultire
   block mechanism
      could be sed-esque script where there are primitives for shoving matched groups "into" a block in construction
         could actually be a full perl domain language
recs-join - Join in sqlite for larger db streams
recs-sort, recs-todb - need value options for keyspec groups
recs-fromhtmltable - parse an html file, extract data from a table
recs-collate - use Getopt::Long's multiple option values supports to provide easier aggregators, e.g.  something like --sum x
recs-multiplex - divide incoming stream by a "thread/process" key, feeding to multiple copies of the "same" operation and dumping their outputs incrementally
recs-annotate - memoized annotation of records based on a slice of keys
recs-collate - use fastcollate when possible
recs-from* - Add ability to annotate record with filename
recs-tognuplot - use a library rather than invoking gnuplot directly
recs-togchart - use google chart api, seems simplier than gnuplot, could support more options? also look at 'Chart' on CPAN, maybe that instead?, could also support graph viz charts, see: http://code.google.com/apis/chart/image/docs/gallery/graphviz.html
refactor Aggregator/Deaggregator loading/registry code since we'll need it for clumper (and annotater?) as well
recs-xform - add option to send null $r at the end of the stream to allow final actions after spooling records
--help - have --help fit on one screen for all scripts, (maybe 40 lines), with additionall help available through drifferent help types
Executor - add executor::options_help to all scripts that need it.
tonguplot - scrap and start over?
Options help - remove --filename-key from certain scripts (tognuplot, tohtml, etc)
recs-streamparse - Terrible name... provide state machine line in frommultire but operating on records  see STREAMPARSE_EXAMPLE below for a usecase...
recs-xform - -A and -B and -C for record context, available in $r->{1}, $r->{-1}, etc
SQL equivalents (recs-grep for Select..WHERE, recs-collate for SELECT AGG() from... GROUP BY KEY) - not sure this is a great idea

Aribritation Collation clumps
  - suportt week over week
  - add new aggreators that expect 2 or some number of recs
  - "clumper" could be a new type in the domain language allowing things like nested mechanisms easily

recs-autojoin - join stream against itself

Key groups:
  rerun field group for each record - may have an issue with recs-collate
  'Value attribute' ideas:
      !REGEX!v=numeric
      '!perc-(\d+)!v=Percentile: $1'
      '!perc-!v-eval=Percentile {{field}}'
  "Pretty-ify field names for toptable"
